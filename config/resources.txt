# Внешние ресурсы
# Установите этот параметр в местоположение .zip с .rsc сервера внутри.
# Если вы зададите это значение несколько раз, сервер будет чередовать ссылки.
# Чтобы использовать это, опция компиляции PRELOAD_RSC должна быть установлена в 0, чтобы запретить Byond предварительно загружать ресурсы.
# Урлы ресурсов не могут быть зашифрованы (https://), так как они загружаются byond, а не IE, а byond не умеет шифровать.

EXTERNAL_RSC_URLS http://tgstation13.download/byond/tgstationv2.zip


########################
# Browser Asset Config #
########################
# Активы браузера - это любые файлы, включенные в интерфейсы. css, изображения, javascript и т.д.
# Здесь мы настраиваем, как доставить их игроку, чтобы интерфейсы могли получить к ним доступ.

# Asset Transport
# Обычный способ доставки активов клиентам - это использование внутренней системы byond. Это может быть медленным и задерживать открытие окон интерфейса. Это также не позволяет внутренним окнам IE, которые использует byond, кэшировать что-либо.
# Вместо этого можно заставить сервер сохранять их на веб-сайт через папку внутри игрового сервера, которую веб-сервер может прочитать. Это может быть простой веб-сервер или что-то, поддерживаемое CDN.
# Допустимые значения: simple, webroot. По умолчанию используется simple.
#ASSET_TRANSPORT webroot


# Настраиваемые значения простого транспорта активов.

# Отметьте это, чтобы сервер пассивно отправлял все браузерные активы каждому клиенту в фоновом режиме. (вместо того чтобы ждать, когда они понадобятся)
# Это должно быть некомментировано в производстве и закомментировано в разработке
#ASSET_SIMPLE_PRELOAD


# Настраиваемые значения транспорта активов Webroot.

# Локальная папка для сохранения активов.
# Активы будут сохраняться в формате asset.MD5HASH.EXT или в namespaces/hash/ как ASSET_FILE_NAME или asset.MD5HASH.EXT
#ASSET_CDN_WEBROOT data/asset-store/

# URL, с которого можно получить доступ к папке, указанной выше.
# для достижения наилучших результатов веб-сервер, использующий этот способ, должен возвращать длительное время действия кэша, так как все активы, отправляемые через этот транспорт, используют урлы на основе хэшей
# Шифрование (https) здесь поддерживается, но у клиентов linux будут проблемы, если вы требуете более высокий уровень tls 1.0. Клиенты Windows вплоть до windows 7 могут работать с tls 1.2 без проблем.
# если вы хотите протестировать это локально, вы можете просто запустить скрипт `localhost-asset-webroot-server.py` python3 для размещения активов, хранящихся в `data/asset-store/` через http://localhost:58715/.
#ASSET_CDN_URL http://localhost:58715/

# Веб-серверы CDN должны предоставлять CORS-заголовки, иначе TGUI сломается и не сможет загрузить все элементы. Следующий пример для IIS:
# <add name="Access-Control-Allow-Origin" value="*" />
# <add name="Vary" value="Origin" />
# <add name="Access-Control-Allow-Methods" value="GET, POST, OPTIONS" />
# <add name="Access-Control-Max-Age" value="0" />
